#!/usr/bin/env ruby
require 'yaml'

SpecConfig = YAML.load_file('./config/app.yml')
MongoConf  = YAML.load_file('./config/mongoid.yml')


class DbCleaner
  attr_reader :mongodb, :el_host, :el_port, :mysql_db, :mysql_user,
              :mysql_pass, :rails_base, :rrd_file, :confirm, :force


  def initialize(_force=false)
    @force      = _force
    @confirm    = (0..9).to_a.sample(6).map(&:to_s).join
    @mongodb    = MongoConf[SpecConfig['rails_env']]['sessions']['default']['database']
    @el_host    = SpecConfig['elastic_host']
    @el_port    = SpecConfig['elastic_port']
    @mysql_db   = SpecConfig['mysql_db']
    @mysql_user = SpecConfig['mysql_user']
    @mysql_pass = SpecConfig['mysql_pass']
    @rails_base = SpecConfig['rails_base']
    @rrd_file   = SpecConfig['stats_rrd']
  end


  def wipe_dbs
    system "rm #{rrd_file}"
    system "redis-cli flushall >/dev/null"
    system "mongo #{mongodb} --eval 'db.dropDatabase();' >/dev/null"
    system "curl -s -XDELETE 'http://#{el_host}:#{el_port}/_all/' >/dev/null"
    system "mysql -u#{mysql_user} -p#{mysql_pass} -Nse 'show tables' #{mysql_db} | grep -v schema_migrations | while read table; do mysql -u#{mysql_user} -p#{mysql_pass} -e \"truncate table $table\" #{mysql_db}; done"
    system "sudo sv force-restart /etc/service/* >/dev/null"
    system "cd #{rails_base}; rake db:mongoid:create_indexes voice:seed_admin_user >/dev/null"
  end


  def print_warnings
    puts 'Caution, this script will:'
    puts '- wipe all databases,'
    puts '- restart the ruby services,'
    puts '- seed the admin user.'
    puts
    puts "If you really want to do that, enter #{confirm}."
  end


  def wipe_with_warnings
    print_warnings
    STDIN.gets.chomp == confirm ? wipe_dbs : puts('Exit without action.')
  end


  def start
    force ? wipe_dbs : wipe_with_warnings
  end
end


DbCleaner.new(ENV['CONFIRM_DELETE']).start
